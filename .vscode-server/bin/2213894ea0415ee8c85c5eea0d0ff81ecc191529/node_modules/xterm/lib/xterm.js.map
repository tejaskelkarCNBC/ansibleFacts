{"version":3,"sources":["webpack://Terminal/webpack/universalModuleDefinition","webpack://Terminal/webpack/bootstrap","webpack://Terminal/./src/common/Lifecycle.ts","webpack://Terminal/./src/common/buffer/BufferLine.ts","webpack://Terminal/./src/common/EventEmitter.ts","webpack://Terminal/./src/browser/Lifecycle.ts","webpack://Terminal/./src/renderer/atlas/Types.ts","webpack://Terminal/./src/common/Platform.ts","webpack://Terminal/./src/common/data/EscapeSequences.ts","webpack://Terminal/./src/renderer/BaseRenderLayer.ts","webpack://Terminal/./src/common/TypedArrayUtils.ts","webpack://Terminal/./src/common/input/TextDecoder.ts","webpack://Terminal/./src/common/Types.ts","webpack://Terminal/./src/browser/LocalizableStrings.ts","webpack://Terminal/./src/common/CharWidth.ts","webpack://Terminal/./src/renderer/atlas/CharAtlasCache.ts","webpack://Terminal/./src/renderer/atlas/CharAtlasUtils.ts","webpack://Terminal/./src/browser/ColorManager.ts","webpack://Terminal/./src/renderer/CharacterJoinerRegistry.ts","webpack://Terminal/./src/MouseZoneManager.ts","webpack://Terminal/./src/browser/input/MouseHelper.ts","webpack://Terminal/./src/browser/RenderDebouncer.ts","webpack://Terminal/./src/browser/ScreenDprMonitor.ts","webpack://Terminal/./src/public/Terminal.ts","webpack://Terminal/./src/Terminal.ts","webpack://Terminal/./src/CompositionHelper.ts","webpack://Terminal/./src/Viewport.ts","webpack://Terminal/./src/Clipboard.ts","webpack://Terminal/./src/InputHandler.ts","webpack://Terminal/./src/common/data/Charsets.ts","webpack://Terminal/./src/common/parser/EscapeSequenceParser.ts","webpack://Terminal/./src/renderer/Renderer.ts","webpack://Terminal/./src/renderer/TextRenderLayer.ts","webpack://Terminal/./src/renderer/GridCache.ts","webpack://Terminal/./src/renderer/atlas/DynamicCharAtlas.ts","webpack://Terminal/./src/renderer/atlas/BaseCharAtlas.ts","webpack://Terminal/./src/renderer/atlas/LRUMap.ts","webpack://Terminal/./src/renderer/SelectionRenderLayer.ts","webpack://Terminal/./src/renderer/CursorRenderLayer.ts","webpack://Terminal/./src/renderer/LinkRenderLayer.ts","webpack://Terminal/./src/Linkifier.ts","webpack://Terminal/./src/SelectionManager.ts","webpack://Terminal/./src/SelectionModel.ts","webpack://Terminal/./src/handlers/AltClickHandler.ts","webpack://Terminal/./src/SoundManager.ts","webpack://Terminal/./src/AccessibilityManager.ts","webpack://Terminal/./src/renderer/dom/DomRenderer.ts","webpack://Terminal/./src/renderer/dom/DomRendererRowFactory.ts","webpack://Terminal/./src/common/input/Keyboard.ts","webpack://Terminal/./src/WindowsMode.ts","webpack://Terminal/./src/browser/services/RenderService.ts","webpack://Terminal/./src/common/services/OptionsService.ts","webpack://Terminal/./src/common/Clone.ts","webpack://Terminal/./src/browser/services/CharSizeService.ts","webpack://Terminal/./src/common/services/BufferService.ts","webpack://Terminal/./src/common/buffer/BufferSet.ts","webpack://Terminal/./src/common/buffer/Buffer.ts","webpack://Terminal/./src/common/CircularList.ts","webpack://Terminal/./src/common/buffer/BufferReflow.ts","webpack://Terminal/./src/common/buffer/Marker.ts","webpack://Terminal/./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Disposable","this","_disposables","_isDisposed","dispose","forEach","length","register","push","unregister","index","indexOf","splice","Types_1","TextDecoder_1","DEFAULT_ATTR","DEFAULT_COLOR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","CELL_SIZE","AttributeData","fg","bg","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","DEFAULT_ATTR_DATA","freeze","CellData","_super","_this","apply","arguments","content","combinedData","__extends","fromCharData","obj","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","BufferLine","cols","fillCellData","isWrapped","_combined","_data","Uint32Array","cell","setCell","cp","set","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","codePoint","width","addCodepointToCell","insertCells","pos","deleteCells","replaceCells","start","end","resize","data","subarray","keys","parseInt","fill","copyFrom","line","el","newLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","Math","min","result","EventEmitter","_listeners","_event","listener","fire","queue","undefined","addDisposableDomListener","node","type","handler","useCapture","addEventListener","removeEventListener","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","isNode","navigator","userAgent","platform","contains","arr","isFirefox","isSafari","test","isMSIE","isMac","isIpad","isIphone","isMSWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","Types_2","CharAtlasCache_1","BufferLine_1","BaseRenderLayer","_container","id","zIndex","_alpha","_colors","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","toString","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","getContext","alpha","clearAll","onOptionsChanged","terminal","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","warmUp","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","fillCells","x","y","fillRect","fillBottomLineAtCells","devicePixelRatio","fillLeftLineAtCell","strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","css","clearCells","fillCharTrueColor","font","_getFont","textBaseline","_clipRow","fillText","drawChars","_drawUncachedChars","options","drawBoldTextInBrightColors","draw","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","clip","fontWeight","fontWeightBold","fontSize","fontFamily","fillFallback","array","concat","a","b","constructor","String","fromCharCode","utf32ToString","codepoint","StringToUtf32","_interim","clear","decode","input","target","size","startPos","Utf8ToUtf32","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","blankLine","promptLabel","tooMuchOutput","TypedArrayUtils_1","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","max","bisearch","wcwidthHigh","getStringCellWidth","CharAtlasUtils_1","DynamicCharAtlas_1","charAtlasCache","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","removeTerminalFromCache","clonedColors","cursor","cursorAccent","selection","slice","allowTransparency","rgba","is256Color","colorCode","DEFAULT_FOREGROUND","fromHex","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","toPaddedHex","DEFAULT_ANSI_COLORS","v","g","ch","ColorManager","canvas","ctx","Error","globalCompositeOperation","_litmusColor","createLinearGradient","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","JoinedCellData","firstCell","_width","CharacterJoinerRegistry","_terminal","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","j","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","length_1","newRange","inRange","range","Lifecycle_1","Lifecycle_2","MouseZoneManager","_zones","_areZonesActive","_tooltipTimeout","_currentZone","_lastHoverCoords","element","e","_onMouseDown","_mouseMoveListener","_onMouseMove","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","y1","y2","leaveCallback","pageX","pageY","_onHover","_findZoneEventAt","clearTimeout","hoverCallback","setTimeout","_onTooltip","tooltipCallback","_initialSelectionLength","getSelection","willLinkActivate","preventDefault","stopImmediatePropagation","currentSelectionLength","clickCallback","coords","mouseHelper","getCoords","screenElement","x1","x2","MouseZone","MouseHelper","_renderService","_charSizeService","getCoordsRelativeToElement","event","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","isSelection","hasValidSize","ceil","dimensions","actualCellWidth","actualCellHeight","getRawByteCoords","RenderDebouncer","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","ScreenDprMonitor","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal_1","Strings","AddonManager_1","Terminal","_core","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onTitleChange","onScroll","onKey","onRender","onResize","textarea","BufferApiView","markers","blur","focus","columns","writeln","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","addCsiHandler","flag","callback","addOscHandler","ident","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","getOption","optionsService","setOption","reset","applyAddon","addon","loadAddon","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","CompositionHelper_1","Viewport_1","Clipboard_1","EscapeSequences_1","InputHandler_1","Renderer_1","Linkifier_1","SelectionManager_1","Browser","MouseHelper_1","SoundManager_1","MouseZoneManager_1","AccessibilityManager_1","DomRenderer_1","Keyboard_1","EventEmitter_1","WindowsMode_1","ColorManager_1","RenderService_1","OptionsService_1","CharSizeService_1","BufferService_1","browser","_blankLine","_onCursorMove","_onData","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","OptionsService","_bufferService","BufferService","_setupOptionsListeners","_setup","_windowsMode","_customKeyEventHandler","parentNode","_parent","body","cursorState","cursorHidden","applicationKeypad","applicationCursor","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","params","currentParam","writeBuffer","writeBufferUtf8","_writeInProgress","_xoffSentToCatchUp","_userScrolling","_inputHandler","InputHandler","selectionManager","linkifier","Linkifier","_mouseZoneManager","soundManager","SoundManager","initBuffersListeners","windowsMode","applyWindowsMode","buffers","active","eraseAttrData","preventScroll","activeElement","hasFocus","onOptionChange","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","newBufferLength","scrollback","amountToTrim","needsRefresh","trimStart","_onTextAreaFocus","ev","sendFocus","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","copyHandler","pasteHandlerWrapper","pasteHandler","button","rightClickHandler","rightClickSelectsWord","moveTextAreaUnderMouseCursor","self","_keyDown","_keyPress","keyCode","wasModifierKeyOnlyEvent","_keyUp","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_context","ownerDocument","defaultView","_document","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","attachToDom","tabIndex","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","Viewport","onThemeChange","onDimensionsChange","SelectionManager","onMouseDown","onRedrawRequest","onLinuxMouseSelection","toggle","mouseEvents","disable","enable","setDimensions","bindMouse","rendererType","Renderer","DomRenderer","pressed","sendButton","shift","meta","ctrl","mod","overrideType","which","detail","deltaY","shiftKey","metaKey","ctrlKey","vt200Mouse","normalMouse","getButton","sendEvent","encode","utfMouse","_vt300Mouse","data_1","_decLocator","page","urxvtMouse","sgrMouse","shouldForceSelection","cancel","moveHandler","sendMove","x10Mouse","hasScrollback","getLinesScrolled","sequence","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","updateRange","disp","suppressScrollEvent","oldYdisp","scrollAmount","useFlowControl","_innerWriteUtf8","bufferOffset","startTime","Date","now","_refreshStart","_refreshEnd","parseUtf8","_innerWrite","parse","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","altKey","setgLevel","setgCharset","charCode","bell","_soundBell","playBellSound","_visualBell","_visualBellTimer","log","debug","error","isNaN","MINIMUM_COLS","MINIMUM_ROWS","maxRange","is","term","termName","disableStdin","handleTitle","title","reverseIndex","inputHandler","writeInProgress","xoffSentToCatchUp","userScrolling","tabSet","tabs","force","cancelEvents","stopPropagation","bellStyle","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","currentCompositionPosition_1","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollArea","_dimensions","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","onDimensionsChance","backgroundColor","_refresh","offsetHeight","newBufferHeight","round","newScrollTop","offsetParent","_getPixelsScrolled","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","_lastTouchY","touches","prepareTextForTerminal","bracketTextForPaste","position","clipboardData","setData","dispatchPaste","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","Charsets_1","CharWidth_1","EscapeSequenceParser_1","GLEVEL","(",")","*","+","-",".","DECRQSS","hook","collect","put","unhook","pt","block","underline","bar","_parser","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","identifier","setPrintHandler","print","setCsiHandler","insertChars","cursorUp","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributes","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","resetMode","charAttributes","deviceStatus","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","setOscHandler","setTitle","setEscHandler","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","this_1","selectCharset","CHARSETS","setErrorHandler","state","setDcsHandler","cursorStartX","cursorStartY","chWidth","curAttr","bufferRow","getNullCell","precedingCodepoint","convertEol","originalX","nextStop","param","col","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","prevStop","DEFAULT_CHARSET","savedCols","activateAltBuffer","activateNormalBuffer","attr","cursorStyle","isBlinking","cursorBlink","savedX","savedY","savedCurAttrData","collectAndFlag","level","`","f","h","k","q","u","w","z","{","|","}","~","#","@","[","\\","]","^","_","TransitionTable","setDefault","action","next","addMany","codes","VT500_TRANSITION_TABLE","blueprint","Array","map","unused","PRINTABLES","EXECUTABLES","states","DcsDummy","TRANSITIONS","initialState","currentState","_osc","_params","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_oscHandlerFb","_dcsHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscHandlers","_dcsHandlers","_activeDcsHandler","_errorHandler","clearPrintHandler","clearExecuteHandler","handlerList","handlerIndex","clearCsiHandler","clearEscHandler","clearOscHandler","clearDcsHandler","setDcsHandlerFallback","clearErrorHandler","transition","osc","dcsHandler","j_1","abort","handlers","j_2","j_3","idx","handlers_1","j_4","TextRenderLayer_1","SelectionRenderLayer_1","CursorRenderLayer_1","LinkRenderLayer_1","CharacterJoinerRegistry_1","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","GridCache_1","BaseRenderLayer_1","container","characterJoinerRegistry","_characterOverlapCache","_state","GridCache","terminalFont","_characterWidth","_characterFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","BaseCharAtlas_1","LRUMap_1","Platform_1","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","cacheValue_1","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","color","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","middleRowCount","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_rowsTimeoutId","_linkifyRows","TIME_BEFORE_LINKIFY","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","OVERSCAN_CHAR_LIMIT","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","hoverLeaveCallback","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","_createLinkHoverEvent","SelectionModel_1","AltClickHandler_1","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","bufferService","_enabled","_onLinuxMouseSelection","_onRedrawRequest","_initListeners","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","_mouseUpListener","_onMouseUp","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","_mouseDownTimeStamp","timeStamp","_dragScrollAmount","_onIncrementalClick","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","AltClickHandler","move","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","length_2","_isCharWordSeparator","length_3","length_4","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wrappedRange","getWrappedRangeForLine","last","startPlusLength","_mouseEvent","_lines","_startCol","_startRow","coordinates","_a","coordinate","_endCol","_endRow","_arrowSequences","_moveHorizontallyOnly","_resetStartingRow","_moveToRequestedRow","_moveToRequestedCol","repeat","_bufferLine","_wrappedRowsForRow","_sequence","_wrappedRowsCount","_verticalDirection","direction","_horizontalDirection","wrappedRows","currentRow","lineWraps","forward","currentCol","bufferStr","str","rpt","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","dataURI","split","RenderDebouncer_1","ScreenDprMonitor_1","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","_announceCharacters","DomRendererRowFactory_1","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","innerHTML","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","endCol_1","colStart","colEnd","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","_terminalOptions","isCursorRow","cellWidth","lineLength","charElement","swapColor","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","observer_1","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","Clone_1","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","tabStopWidth","screenKeys","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","val","depth","clonedObject","isArray","parentElement","_optionsService","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet_1","BufferSet","Buffer_1","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","CircularList_1","BufferReflow_1","Marker_1","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","maxLength","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","_i","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","i_1","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_id","_nextId","isDisposed","_onDispose","_addons","instance","loadedAddon","_wrappedAddonDispose","activate"],"mappings":"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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Terminal\"] = factory();\n\telse\n\t\troot[\"Terminal\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { DEFAULT_COLOR, CharData, IBufferLine, ICellData, IColorRGB, IAttributeData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    } else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        } else {\n          combined = true;\n        }\n      } else {\n        combined = true;\n      }\n    } else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport class EventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            for (let i = 0; i < this._listeners.length; i++) {\n              if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { FontWeight } from 'xterm';\nimport { IColorSet } from 'browser/Types';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n\nexport interface IGlyphIdentifier {\n  chars: string;\n  code: number;\n  bg: number;\n  fg: number;\n  bold: boolean;\n  dim: boolean;\n  italic: boolean;\n}\n\nexport interface ICharAtlasConfig {\n  devicePixelRatio: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  scaledCharWidth: number;\n  scaledCharHeight: number;\n  allowTransparency: boolean;\n  colors: IColorSet;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport const isMSIE = !!~userAgent.indexOf('MSIE') || !!~userAgent.indexOf('Trident');\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isMSWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { ICellData, DEFAULT_COLOR } from 'common/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, IGlyphIdentifier } from './atlas/Types';\nimport { BaseCharAtlas } from './atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { CellData, AttributeData, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from 'common/buffer/BufferLine';\nimport { IColorSet } from 'browser/Types';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = this._canvas.getContext('2d', {alpha: this._alpha});\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this.clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {}\n  public onBlur(terminal: ITerminal): void {}\n  public onFocus(terminal: ITerminal): void {}\n  public onCursorMove(terminal: ITerminal): void {}\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: ITerminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected setTransparency(terminal: ITerminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: ITerminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this.clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: ITerminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected fillCharTrueColor(terminal: ITerminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param terminal The terminal.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected drawChars(terminal: ITerminal, cell: ICellData, x: number, y: number): void {\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(terminal, cell, x, y);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = terminal.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(terminal, cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param terminal The terminal.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(terminal: ITerminal, cell: ICellData, x: number, y: number): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(terminal, !!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (cell.isBgDefault()) {\n        this._ctx.fillStyle = this._colors.background.css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n    } else {\n      if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (terminal.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(terminal, y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: ITerminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        terminal.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: ITerminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { IDeleteEvent, IInsertEvent } from 'common/CircularList';\n\nexport const DEFAULT_COLOR = 256;\n\nexport interface IDisposable {\n  dispose(): void;\n}\n\nexport interface IEventEmitter {\n  on(type: string, listener: (...args: any[]) => void): void;\n  off(type: string, listener: (...args: any[]) => void): void;\n  emit(type: string, data?: any): void;\n  addDisposableListener(type: string, handler: (...args: any[]) => void): IDisposable;\n}\n\nexport type XtermListener = (...args: any[]) => void;\n\n/**\n * A keyboard event interface which does not depend on the DOM, KeyboardEvent implicitly extends\n * this event.\n */\nexport interface IKeyboardEvent {\n  altKey: boolean;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  metaKey: boolean;\n  keyCode: number;\n  key: string;\n  type: string;\n}\n\nexport interface ICircularList<T> {\n  length: number;\n  maxLength: number;\n  isFull: boolean;\n\n  onDeleteEmitter: EventEmitter<IDeleteEvent>;\n  onDelete: IEvent<IDeleteEvent>;\n  onInsertEmitter: EventEmitter<IInsertEvent>;\n  onInsert: IEvent<IInsertEvent>;\n  onTrimEmitter: EventEmitter<number>;\n  onTrim: IEvent<number>;\n\n  get(index: number): T | undefined;\n  set(index: number, value: T): void;\n  push(value: T): void;\n  recycle(): T | undefined;\n  pop(): T | undefined;\n  splice(start: number, deleteCount: number, ...items: T[]): void;\n  trimStart(count: number): void;\n  shiftElements(start: number, count: number, offset: number): void;\n}\n\nexport const enum KeyboardResultType {\n  SEND_KEY,\n  SELECT_ALL,\n  PAGE_UP,\n  PAGE_DOWN\n}\n\nexport interface IKeyboardResult {\n  type: KeyboardResultType;\n  cancel: boolean;\n  key: string | undefined;\n}\n\nexport interface ICharset {\n  [key: string]: string;\n}\n\nexport type CharData = [number, string, number, number];\nexport type IColorRGB = [number, number, number];\n\n/** Attribute data */\nexport interface IAttributeData {\n  fg: number;\n  bg: number;\n\n  clone(): IAttributeData;\n\n  // flags\n  isInverse(): number;\n  isBold(): number;\n  isUnderline(): number;\n  isBlink(): number;\n  isInvisible(): number;\n  isItalic(): number;\n  isDim(): number;\n\n  // color modes\n  getFgColorMode(): number;\n  getBgColorMode(): number;\n  isFgRGB(): boolean;\n  isBgRGB(): boolean;\n  isFgPalette(): boolean;\n  isBgPalette(): boolean;\n  isFgDefault(): boolean;\n  isBgDefault(): boolean;\n\n  // colors\n  getFgColor(): number;\n  getBgColor(): number;\n}\n\n/** Cell data */\nexport interface ICellData extends IAttributeData {\n  content: number;\n  combinedData: string;\n  isCombined(): number;\n  getWidth(): number;\n  getChars(): string;\n  getCode(): number;\n  setFromCharData(value: CharData): void;\n  getAsCharData(): CharData;\n}\n\n/**\n * Interface for a line in the terminal buffer.\n */\nexport interface IBufferLine {\n  length: number;\n  isWrapped: boolean;\n  get(index: number): CharData;\n  set(index: number, value: CharData): void;\n  loadCell(index: number, cell: ICellData): ICellData;\n  setCell(index: number, cell: ICellData): void;\n  setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void;\n  addCodepointToCell(index: number, codePoint: number): void;\n  insertCells(pos: number, n: number, ch: ICellData): void;\n  deleteCells(pos: number, n: number, fill: ICellData): void;\n  replaceCells(start: number, end: number, fill: ICellData): void;\n  resize(cols: number, fill: ICellData): void;\n  fill(fillCellData: ICellData): void;\n  copyFrom(line: IBufferLine): void;\n  clone(): IBufferLine;\n  getTrimmedLength(): number;\n  translateToString(trimRight?: boolean, startCol?: number, endCol?: number): string;\n\n  /* direct access to cell attrs */\n  getWidth(index: number): number;\n  hasWidth(index: number): number;\n  getFg(index: number): number;\n  getBg(index: number): number;\n  hasContent(index: number): number;\n  getCodePoint(index: number): number;\n  isCombined(index: number): number;\n  getString(index: number): string;\n}\n\nexport interface IMarker extends IDisposable {\n  readonly id: number;\n  readonly isDisposed: boolean;\n  readonly line: number;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let blankLine = 'Blank line';\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { BaseCharAtlas } from './BaseCharAtlas';\nimport { DynamicCharAtlas } from './DynamicCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: ITerminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: ITerminal,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: ITerminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { ICharAtlasConfig } from './Types';\nimport { DEFAULT_COLOR } from 'common/Types';\nimport { IColorSet } from 'browser/Types';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, terminal: ITerminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: null,\n    cursorAccent: null,\n    selection: null,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily,\n    fontSize: terminal.options.fontSize,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    allowTransparency: terminal.options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from './Types';\nimport { CellData, Content, AttributeData, WHITESPACE_CELL_CHAR } from 'common/buffer/BufferLine';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _terminal: ITerminal) {\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._terminal.buffer.lines.get(row);\n    if (line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._terminal.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._terminal.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._terminal.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          inRange = false;\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IMouseZoneManager, IMouseZone } from './Types';\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number = null;\n  private _currentZone: IMouseZone = null;\n  private _lastHoverCoords: [number, number] = [null, null];\n  private _initialSelectionLength: number;\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._terminal.element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!end) {\n      start = 0;\n      end = this._terminal.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = null;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._terminal.element.addEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._terminal.element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._terminal.element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._terminal.element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = null;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._terminal.getSelection().length;\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._terminal.getSelection().length;\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone {\n    const coords = this._terminal.mouseHelper.getCoords(e, this._terminal.screenElement, this._terminal.cols, this._terminal.rows);\n    if (!coords) {\n      return null;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IMouseHelper } from 'browser/Types';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class MouseHelper implements IMouseHelper {\n  constructor(\n    private _renderService: RenderService,\n    private _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public static getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n    const rect = element.getBoundingClientRect();\n    return [event.clientX - rect.left, event.clientY - rect.top];\n  }\n\n  /**\n   * Gets coordinates within the terminal for a particular mouse event. The result\n   * is returned as an array in the form [x, y] instead of an object as it's a\n   * little faster and this function is used in some low level code.\n   * @param event The mouse event.\n   * @param element The terminal's container element.\n   * @param colCount The number of columns in the terminal.\n   * @param rowCount The number of rows n the terminal.\n   * @param isSelection Whether the request is for the selection or not. This will\n   * apply an offset to the x value such that the left half of the cell will\n   * select that cell and the right half will select the next cell.\n   */\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    // Coordinates cannot be measured if there are no valid\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n\n    const coords = MouseHelper.getCoordsRelativeToElement(event, element);\n    if (!coords) {\n      return undefined;\n    }\n\n    coords[0] = Math.ceil((coords[0] + (isSelection ? this._renderService.dimensions.actualCellWidth / 2 : 0)) / this._renderService.dimensions.actualCellWidth);\n    coords[1] = Math.ceil(coords[1] / this._renderService.dimensions.actualCellHeight);\n\n    // Ensure coordinates are within the terminal viewport. Note that selections\n    // need an addition point of precision to cover the end point (as characters\n    // cover half of one char and half of the next).\n    coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n    coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n    return coords;\n  }\n\n  /**\n   * Gets coordinates within the terminal for a particular mouse event, wrapping\n   * them to the bounds of the terminal and adding 32 to both the x and y values\n   * as expected by xterm.\n   * @param event The mouse event.\n   * @param element The terminal's container element.\n   * @param colCount The number of columns in the terminal.\n   * @param rowCount The number of rows in the terminal.\n   */\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number | undefined, y: number | undefined } {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n\n    // xterm sends raw bytes and starts at 32 (SP) for each.\n    const x = coords ? coords[0] + 32 : undefined;\n    const y = coords ? coords[1] + 32 : undefined;\n\n    return { x, y };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement { return this._core.element; }\n  public get textarea(): HTMLTextAreaElement { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._core.resize(columns, rows);\n  }\n  public writeln(data: string): void {\n    this._core.writeln(data);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public addCsiHandler(flag: string, callback: (params: number[], collect: string) => boolean): IDisposable {\n    return this._core.addCsiHandler(flag, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string): void {\n    this._core.write(data);\n  }\n  public writeUtf8(data: Uint8Array): void {\n    this._core.writeUtf8(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'rendererType' | 'termName'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public static applyAddon(addon: any): void {\n    addon.apply(Terminal);\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, IViewport, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, ILinkifier, ILinkMatcherOptions, CustomKeyEventHandler, LinkMatcherHandler, IMouseZoneManager } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from './CompositionHelper';\nimport { Viewport } from './Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, pasteHandler, copyHandler } from './Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from './Linkifier';\nimport { SelectionManager } from './SelectionManager';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from './browser/LocalizableStrings';\nimport { MouseHelper } from 'browser/input/MouseHelper';\nimport { SoundManager } from './SoundManager';\nimport { MouseZoneManager } from './MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { removeTerminalFromCache } from './renderer/atlas/CharAtlasCache';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Attributes, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { applyWindowsMode } from './WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n/**\n * The amount of write requests to queue before sending an XOFF signal to the\n * pty process. This number must be small in order for ^C and similar sequences\n * to be responsive.\n */\nconst WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement;\n  private _context: Window;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _renderService: RenderService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public applicationCursor: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  private _decLocator: boolean; // This is unstable and never set\n  public x10Mouse: boolean;\n  public vt200Mouse: boolean;\n  private _vt300Mouse: boolean; // This is unstable and never set\n  public normalMouse: boolean;\n  public mouseEvents: boolean;\n  public sendFocus: boolean;\n  public utfMouse: boolean;\n  public sgrMouse: boolean;\n  public urxvtMouse: boolean;\n\n  // misc\n  private _refreshStart: number;\n  private _refreshEnd: number;\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // user input states\n  public writeBuffer: string[];\n  public writeBufferUtf8: Uint8Array[];\n  private _writeInProgress: boolean;\n\n  /**\n   * Whether _xterm.js_ sent XOFF in order to catch up with the pty process.\n   * This is a distinct state from writeStopped so that if the user requested\n   * XOFF via ^S that it will not automatically resume when the writeBuffer goes\n   * below threshold.\n   */\n  private _xoffSentToCatchUp: boolean;\n\n  /** Whether writing has been stopped as a result of XOFF */\n  // private _writeStopped: boolean;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  private _inputHandler: InputHandler;\n  public soundManager: SoundManager;\n  public selectionManager: SelectionManager;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  public mouseHelper: MouseHelper;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this.optionsService = new OptionsService(options);\n    this._bufferService = new BufferService(this.optionsService);\n    this._setupOptionsListeners();\n    this._setup();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    if (this._windowsMode) {\n      this._windowsMode.dispose();\n      this._windowsMode = undefined;\n    }\n    this._customKeyEventHandler = null;\n    removeTerminalFromCache(this);\n    this.handler = () => {};\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.applicationCursor = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    // user input states\n    this.writeBuffer = [];\n    this.writeBufferUtf8 = [];\n    this._writeInProgress = false;\n\n    this._xoffSentToCatchUp = false;\n    // this._writeStopped = false;\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this._inputHandler.onData(e => this._onData.fire(e));\n    this.register(this._inputHandler);\n\n    this.selectionManager = this.selectionManager || null;\n    this.linkifier = this.linkifier || new Linkifier(this);\n    this._mouseZoneManager = this._mouseZoneManager || null;\n    this.soundManager = this.soundManager || new SoundManager(this);\n\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n      this.selectionManager.initBuffersListeners();\n    }\n\n    if (this.options.windowsMode) {\n      this._windowsMode = applyWindowsMode(this);\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea && document.hasFocus();\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n          }\n          if (this._charSizeService) {\n            this._charSizeService.measure();\n          }\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          if (this.viewport) {\n            this.viewport.syncScrollArea();\n          }\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService.dimensions);\n            }\n          } else {\n            if (this._accessibilityManager) {\n              this._accessibilityManager.dispose();\n              this._accessibilityManager = null;\n            }\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'scrollback':\n          const newBufferLength = this.rows + this.optionsService.options.scrollback;\n          if (this.buffer.lines.length > newBufferLength) {\n            const amountToTrim = this.buffer.lines.length - newBufferLength;\n            const needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            if (!this._windowsMode) {\n              this._windowsMode = applyWindowsMode(this);\n            }\n          } else {\n            if (this._windowsMode) {\n              this._windowsMode.dispose();\n              this._windowsMode = undefined;\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this.handler(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this.handler(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this, this.selectionManager);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => pasteHandler(event, this);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this, this.selectionManager, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this, this.selectionManager, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    const self = this;\n    this.register(addDisposableDomListener(this.element, 'keydown', function (ev: KeyboardEvent): void {\n      if (document.activeElement !== this) {\n        return;\n      }\n      self._keyDown(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.element, 'keypress', function (ev: KeyboardEvent): void {\n      if (document.activeElement !== this) {\n        return;\n      }\n      self._keyPress(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.element, 'keyup', (ev: KeyboardEvent) => {\n      if (!wasModifierKeyOnlyEvent(ev)) {\n        this.focus();\n      }\n\n      self._keyUp(ev);\n    }, true));\n\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    // Grab global elements\n    this._context = this._parent.ownerDocument.defaultView;\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this._mouseZoneManager = new MouseZoneManager(this);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this._mouseZoneManager);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = new CharSizeService(this._document, this._helperContainer, this.optionsService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = new CompositionHelper(this.textarea, this._compositionView, this, this._charSizeService);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme;\n    this.options.theme = null;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = new RenderService(renderer, this.rows, this.screenElement, this.optionsService, this._charSizeService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this.viewport = new Viewport(this, this._viewportElement, this._viewportScrollArea, this._renderService.dimensions, this._charSizeService);\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this.selectionManager = new SelectionManager(this, this._charSizeService, this._bufferService);\n    this.register(this.selectionManager.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this.selectionManager.onMouseDown(e)));\n    this.register(this.selectionManager.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this.selectionManager.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this.selectionManager.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this.selectionManager.refresh()));\n\n    this.mouseHelper = new MouseHelper(this._renderService, this._charSizeService);\n    // apply mouse event classes set by escape codes before terminal was attached\n    this.element.classList.toggle('enable-mouse-events', this.mouseEvents);\n    if (this.mouseEvents) {\n      this.selectionManager.disable();\n    } else {\n      this.selectionManager.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService.dimensions);\n      this._accessibilityManager.register(this._renderService.onDimensionsChange(e => this._accessibilityManager.setDimensions(e)));\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return new Renderer(this, this._colorManager.colors, this._charSizeService); break;\n      case 'dom': return new DomRenderer(this, this._colorManager.colors, this._charSizeService); break;\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager.setTheme(theme);\n    if (this._renderService) {\n      this._renderService.setColors(this._colorManager.colors);\n    }\n    if (this.viewport) {\n      this.viewport.onThemeChange(this._colorManager.colors);\n    }\n  }\n\n  /**\n   * XTerm mouse events\n   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n   * To better understand these\n   * the xterm code is very helpful:\n   * Relevant files:\n   *   button.c, charproc.c, misc.c\n   * Relevant functions in xterm/button.c:\n   *   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n   */\n  public bindMouse(): void {\n    const el = this.element;\n    const self = this;\n    let pressed = 32;\n\n    // mouseup, mousedown, wheel\n    // left click: ^[[M 3<^[[M#3<\n    // wheel up: ^[[M`3>\n    function sendButton(ev: MouseEvent | WheelEvent): void {\n      let button;\n      let pos;\n\n      // get the xterm-style button\n      button = getButton(ev);\n\n      // get mouse coordinates\n      pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      sendEvent(button, pos);\n\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n        case 'mouseup':\n          // keep it at the left\n          // button, just in case.\n          pressed = 32;\n          break;\n        case 'wheel':\n          // nothing. don't\n          // interfere with\n          // `pressed`.\n          break;\n      }\n    }\n\n    // motion example of a left click:\n    // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n    function sendMove(ev: MouseEvent): void {\n      let button = pressed;\n      const pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      // buttons marked as motions\n      // are incremented by 32\n      button += 32;\n\n      sendEvent(button, pos);\n    }\n\n    // encode button and\n    // position to characters\n    function encode(data: number[], ch: number): void {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch > 2047) {\n          data.push(2047);\n          return;\n        }\n        data.push(ch);\n      }\n    }\n\n    // send a mouse event:\n    // regular/utf8: ^[[M Cb Cx Cy\n    // urxvt: ^[[ Cb ; Cx ; Cy M\n    // sgr: ^[[ Cb ; Cx ; Cy M/m\n    // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n    // locator: CSI P e ; P b ; P r ; P c ; P p & w\n    function sendEvent(button: number, pos: {x: number, y: number}): void {\n      if (self._vt300Mouse) {\n        // NOTE: Unstable.\n        // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        let data = C0.ESC + '[24';\n        if (button === 0) data += '1';\n        else if (button === 1) data += '3';\n        else if (button === 2) data += '5';\n        else if (button === 3) return;\n        else data += '0';\n        data += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self.handler(data);\n        return;\n      }\n\n      if (self._decLocator) {\n        // NOTE: Unstable.\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;\n        else if (button === 1) button = 4;\n        else if (button === 2) button = 6;\n        else if (button === 3) button = 3;\n        self.handler(C0.ESC + '['\n                  + button\n                  + ';'\n                  + (button === 3 ? 4 : 0)\n                  + ';'\n                  + pos.y\n                  + ';'\n                  + pos.x\n                  + ';'\n                  // Not sure what page is meant to be\n                  + (<any>pos).page || 0\n                  + '&w');\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self.handler(C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M');\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self.handler(C0.ESC + '[<'\n                  + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                  + ';'\n                  + pos.x\n                  + ';'\n                  + pos.y\n                  + ((button & 3) === 3 ? 'm' : 'M'));\n        return;\n      }\n\n      const data: number[] = [];\n\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n\n      self.handler(C0.ESC + '[M' + String.fromCharCode.apply(String, data));\n    }\n\n    function getButton(ev: MouseEvent): number {\n      let button;\n      let shift;\n      let meta;\n      let ctrl;\n      let mod;\n\n      // two low bits:\n      // 0 = left\n      // 1 = middle\n      // 2 = right\n      // 3 = release\n      // wheel up/down:\n      // 1, and 2 - with 64 added\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button !== null && ev.button !== undefined\n            ? +ev.button\n          : ev.which !== null && ev.which !== undefined\n            ? ev.which - 1\n          : null;\n\n          if (Browser.isMSIE) {\n            button = button === 1 ? 0 : button === 4 ? 1 : button;\n          }\n          break;\n        case 'mouseup':\n          button = 3;\n          break;\n        case 'DOMMouseScroll':\n          button = ev.detail < 0\n            ? 64\n          : 65;\n          break;\n        case 'wheel':\n          button = (<WheelEvent>ev).deltaY < 0\n            ? 64\n          : 65;\n          break;\n      }\n\n      // next three bits are the modifiers:\n      // 4 = shift, 8 = meta, 16 = control\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      // no mods\n      if (self.vt200Mouse) {\n        // ctrl only\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      // increment to SP\n      button = (32 + (mod << 2)) + button;\n\n      return button;\n    }\n\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n\n      // Prevent the focus on the textarea from getting lost\n      // and make sure we get focused on mousedown\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this.selectionManager.shouldForceSelection(ev)) {\n        return;\n      }\n\n      // send the button\n      sendButton(ev);\n\n      // fix for odd bug\n      // if (this.vt200Mouse && !this.normalMouse) {\n      if (this.vt200Mouse) {\n        (<any>ev).overrideType = 'mouseup';\n        sendButton(ev);\n        return this.cancel(ev);\n      }\n\n      // TODO: All mouse handling should be pulled into its own file.\n\n      // bind events\n      let moveHandler: (event: MouseEvent) => void;\n      if (this.normalMouse) {\n        moveHandler = (event: MouseEvent) => {\n          // Do nothing if normal mouse mode is on. This can happen if the mouse is held down when the\n          // terminal exits normalMouse mode.\n          if (!this.normalMouse) {\n            return;\n          }\n          sendMove(event);\n        };\n        // TODO: these event listeners should be managed by the disposable, the Terminal reference may\n        // be kept aroud if Terminal.dispose is fired when the mouse is down\n        this._document.addEventListener('mousemove', moveHandler);\n      }\n\n      // x10 compatibility mode can't send button releases\n      const handler = (ev: MouseEvent) => {\n        if (this.normalMouse && !this.x10Mouse) {\n          sendButton(ev);\n        }\n        if (moveHandler) {\n          // Even though this should only be attached when this.normalMouse is true, holding the\n          // mouse button down when normalMouse changes can happen. Just always try to remove it.\n          this._document.removeEventListener('mousemove', moveHandler);\n          moveHandler = null;\n        }\n        this._document.removeEventListener('mouseup', handler);\n        return this.cancel(ev);\n      };\n      this._document.addEventListener('mouseup', handler);\n\n      return this.cancel(ev);\n    }));\n\n    // if (this.normalMouse) {\n    //  on(this.document, 'mousemove', sendMove);\n    // }\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!this.mouseEvents) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this.applicationCursor ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this.handler(data);\n        }\n        return;\n      }\n      if (this.x10Mouse || this._vt300Mouse || this._decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onWheel(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchMove(ev);\n      return this.cancel(ev);\n    }));\n  }\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this._renderService) {\n      this._renderService.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this.selectionManager && this.selectionManager.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this.updateRange(this.buffer.scrollTop);\n    this.updateRange(this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /**\n   * Writes raw utf8 bytes to the terminal.\n   * @param data UintArray with UTF8 bytes to write to the terminal.\n   */\n  public writeUtf8(data: Uint8Array): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values\n    if (!data) {\n      return;\n    }\n\n    this.writeBufferUtf8.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBufferUtf8.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this.handler(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBufferUtf8.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWriteUtf8();\n      });\n    }\n  }\n\n  protected _innerWriteUtf8(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBufferUtf8 = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBufferUtf8.length > bufferOffset) {\n      const data = this.writeBufferUtf8[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBufferUtf8.length === bufferOffset) {\n        this.handler(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._refreshStart = this.buffer.y;\n      this._refreshEnd = this.buffer.y;\n\n      // HACK: Set the parser state based on it's state at the time of return.\n      // This works around the bug #662 which saw the parser state reset in the\n      // middle of parsing escape sequence in two chunks. For some reason the\n      // state of the parser resets to 0 after exiting parser.parse. This change\n      // just sets the state back based on the correct return statement.\n\n      this._inputHandler.parseUtf8(data);\n\n      this.updateRange(this.buffer.y);\n      this.refresh(this._refreshStart, this._refreshEnd);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBufferUtf8.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBufferUtf8 = this.writeBufferUtf8.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWriteUtf8(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBufferUtf8 = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal.\n   * @param data The text to write to the terminal.\n   */\n  public write(data: string): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values (including the empty string)\n    if (!data) {\n      return;\n    }\n\n    this.writeBuffer.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this.handler(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBuffer.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWrite();\n      });\n    }\n  }\n\n  protected _innerWrite(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBuffer = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBuffer.length > bufferOffset) {\n      const data = this.writeBuffer[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBuffer.length === bufferOffset) {\n        this.handler(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._refreshStart = this.buffer.y;\n      this._refreshEnd = this.buffer.y;\n\n      // HACK: Set the parser state based on it's state at the time of return.\n      // This works around the bug #662 which saw the parser state reset in the\n      // middle of parsing escape sequence in two chunks. For some reason the\n      // state of the parser resets to 0 after exiting parser.parse. This change\n      // just sets the state back based on the correct return statement.\n\n      this._inputHandler.parse(data);\n\n      this.updateRange(this.buffer.y);\n      this.refresh(this._refreshStart, this._refreshEnd);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBuffer.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBuffer = this.writeBuffer.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBuffer = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal, followed by a break line character (\\n).\n   * @param data The text to write to the terminal.\n   */\n  public writeln(data: string): void {\n    this.write(data + '\\r\\n');\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(flag: string, callback: (params: number[], collect: string) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(flag, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this.selectionManager ? this.selectionManager.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this.selectionManager.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this.selectionManager ? this.selectionManager.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this.selectionManager.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this.selectionManager.selectionStart[0],\n      startRow: this.selectionManager.selectionStart[1],\n      endColumn: this.selectionManager.selectionEnd[0],\n      endRow: this.selectionManager.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this.selectionManager) {\n      this.selectionManager.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this.selectionManager) {\n      this.selectionManager.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.applicationCursor, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    // if (result.key === C0.DC3) { // XOFF\n    //   this._writeStopped = true;\n    // } else if (result.key === C0.DC1) { // XON\n    //   this._writeStopped = false;\n    // }\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this.handler(result.key);\n\n    return this.cancel(event, true);\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isMSWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this.handler(key);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this.soundManager.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Log the current state to the console.\n   */\n  public log(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.log) return;\n    this._context.console.log(text, data);\n  }\n\n  /**\n   * Log the current state as error to the console.\n   */\n  public error(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.error) return;\n    this._context.console.error(text, data);\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    if (this._charSizeService) {\n      this._charSizeService.measure();\n    }\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Updates the range of rows to refresh\n   * @param y The number of rows to refresh next.\n   */\n  public updateRange(y: number): void {\n    if (y < this._refreshStart) this._refreshStart = y;\n    if (y > this._refreshEnd) this._refreshEnd = y;\n    // if (y > this.refreshEnd) {\n    //   this.refreshEnd = y;\n    //   if (y > this.rows - 1) {\n    //     this.refreshEnd = this.rows - 1;\n    //   }\n    // }\n  }\n\n  /**\n   * Set the range of refreshing to the maximum value\n   */\n  public maxRange(): void {\n    this._refreshStart = 0;\n    this._refreshEnd = this.rows - 1;\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  public handler(data: string): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this.options.disableStdin) {\n      return;\n    }\n\n    // Clear the selection if the selection manager is available and has an active selection\n    if (this.selectionManager && this.selectionManager.hasSelection) {\n      this.selectionManager.clearSelection();\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    if (this.buffer.ybase !== this.buffer.ydisp) {\n      this.scrollToBottom();\n    }\n    this._onData.fire(data);\n  }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * ESC\n   */\n\n  /**\n   * ESC D Index (IND is 0x84).\n   */\n  public index(): void {\n    this.buffer.y++;\n    if (this.buffer.y > this.buffer.scrollBottom) {\n      this.buffer.y--;\n      this.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this.buffer.x >= this.cols) {\n      this.buffer.x--;\n    }\n  }\n\n  /**\n   * ESC M Reverse Index (RI is 0x8d).\n   *\n   * Move the cursor up one row, inserting a new blank line if necessary.\n   */\n  public reverseIndex(): void {\n    if (this.buffer.y === this.buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this.buffer.scrollBottom - this.buffer.scrollTop;\n      this.buffer.lines.shiftElements(this.buffer.y + this.buffer.ybase, scrollRegionHeight, 1);\n      this.buffer.lines.set(this.buffer.y + this.buffer.ybase, this.buffer.getBlankLine(this.eraseAttrData()));\n      this.updateRange(this.buffer.scrollTop);\n      this.updateRange(this.buffer.scrollBottom);\n    } else {\n      this.buffer.y--;\n    }\n  }\n\n  /**\n   * ESC c Full Reset (RIS).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    const writeBuffer = this.writeBuffer;\n    const writeBufferUtf8 = this.writeBufferUtf8;\n    const writeInProgress = this._writeInProgress;\n    const xoffSentToCatchUp = this._xoffSentToCatchUp;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this.writeBuffer = writeBuffer;\n    this.writeBufferUtf8 = writeBufferUtf8;\n    this._writeInProgress = writeInProgress;\n    this._xoffSentToCatchUp = xoffSentToCatchUp;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n\n  /**\n   * ESC H Tab Set (HTS is 0x88).\n   */\n  public tabSet(): void {\n    this.buffer.tabs[this.buffer.x] = true;\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\nimport { ICharSizeService } from 'browser/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Creates a new CompositionHelper.\n   * @param _textarea The textarea that xterm uses for input.\n   * @param _compositionView The element to display the in-progress composition in.\n   * @param _terminal The Terminal to forward the finished composition to.\n   */\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _compositionView: HTMLElement,\n    private _terminal: ITerminal,\n    private _charSizeService: ICharSizeService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: null, end: null };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._terminal.handler(input);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._terminal.handler(input);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._terminal.handler(diff);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._terminal.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._terminal.options.lineHeight);\n      const cursorTop = this._terminal.buffer.y * cellHeight;\n      const cursorLeft = this._terminal.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._terminal.options.fontFamily;\n      this._compositionView.style.fontSize = this._terminal.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IViewport } from './Types';\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { ICharSizeService } from 'browser/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _viewportElement: HTMLElement,\n    private _scrollArea: HTMLElement,\n    private _dimensions: IRenderDimensions,\n    private _charSizeService: ICharSizeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onDimensionsChance(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(): void {\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._terminal.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._terminal.buffer.lines.length;\n      this._refresh();\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._dimensions.canvasHeight) {\n      this._refresh();\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If row height changed\n    if (this._dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh();\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._terminal.buffer.ydisp;\n    this._terminal.scrollLines(diff, true);\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): void {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += amount;\n    // Prevent the page from scrolling when the terminal scrolls\n    ev.preventDefault();\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): void {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    ev.preventDefault();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISelectionManager } from './Types';\n\ninterface IWindow extends Window {\n  clipboardData?: {\n    getData(format: string): string;\n    setData(format: string, data: string): void;\n  };\n}\n\ndeclare var window: IWindow;\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, term: ITerminal, selectionManager: ISelectionManager): void {\n  if (term.browser.isMSIE) {\n    window.clipboardData.setData('Text', selectionManager.selectionText);\n  } else {\n    ev.clipboardData.setData('text/plain', selectionManager.selectionText);\n  }\n\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function pasteHandler(ev: ClipboardEvent, term: ITerminal): void {\n  ev.stopPropagation();\n\n  let text: string;\n\n  const dispatchPaste = function(text: string): void {\n    text = prepareTextForTerminal(text);\n    text = bracketTextForPaste(text, term.bracketedPasteMode);\n    term.handler(text);\n    term.textarea.value = '';\n    term.cancel(ev);\n  };\n\n  if (term.browser.isMSIE) {\n    if (window.clipboardData) {\n      text = window.clipboardData.getData('Text');\n      dispatchPaste(text);\n    }\n  } else {\n    if (ev.clipboardData) {\n      text = ev.clipboardData.getData('text/plain');\n      dispatchPaste(text);\n    }\n  }\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, term: ITerminal): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = term.screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  term.textarea.style.position = 'absolute';\n  term.textarea.style.width = '20px';\n  term.textarea.style.height = '20px';\n  term.textarea.style.left = `${left}px`;\n  term.textarea.style.top = `${top}px`;\n  term.textarea.style.zIndex = '1000';\n\n  term.textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    term.textarea.style.position = null;\n    term.textarea.style.width = null;\n    term.textarea.style.height = null;\n    term.textarea.style.left = null;\n    term.textarea.style.top = null;\n    term.textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionManager The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, term: ITerminal, selectionManager: ISelectionManager, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, term);\n\n  if (shouldSelectWord && !selectionManager.isClickInSelection(ev)) {\n    selectionManager.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  term.textarea.value = selectionManager.selectionText;\n  term.textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { IDisposable } from 'xterm';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { CellData, Attributes, FgFlags, BgFlags, AttributeData, NULL_CELL_WIDTH, NULL_CELL_CODE, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser } from 'common/parser/Types';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(private _terminal: any) { }\n\n  hook(collect: string, params: number[], flag: number): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(): void {\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._terminal.handler(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._terminal.handler(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._terminal.buffer.scrollTop + 1) +\n                ';' + (this._terminal.buffer.scrollBottom + 1) + 'r';\n        return this._terminal.handler(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._terminal.handler(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._terminal.getOption('cursorStyle')];\n        style -= this._terminal.getOption('cursorBlink');\n        return this._terminal.handler(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._terminal.error('Unknown DCS $q %s', data);\n        this._terminal.handler(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n      protected _terminal: IInputHandlingTerminal,\n      private _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((collect: string, params: number[], flag: number) => {\n      this._terminal.error('Unknown CSI code: ', { collect, params, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setEscHandlerFallback((collect: string, flag: number) => {\n      this._terminal.error('Unknown ESC code: ', { collect, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setExecuteHandlerFallback((code: number) => {\n      this._terminal.error('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier: number, data: string) => {\n      this._terminal.error('Unknown OSC code: ', { identifier, data });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end): void => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler('@', (params, collect) => this.insertChars(params));\n    this._parser.setCsiHandler('A', (params, collect) => this.cursorUp(params));\n    this._parser.setCsiHandler('B', (params, collect) => this.cursorDown(params));\n    this._parser.setCsiHandler('C', (params, collect) => this.cursorForward(params));\n    this._parser.setCsiHandler('D', (params, collect) => this.cursorBackward(params));\n    this._parser.setCsiHandler('E', (params, collect) => this.cursorNextLine(params));\n    this._parser.setCsiHandler('F', (params, collect) => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler('G', (params, collect) => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler('H', (params, collect) => this.cursorPosition(params));\n    this._parser.setCsiHandler('I', (params, collect) => this.cursorForwardTab(params));\n    this._parser.setCsiHandler('J', (params, collect) => this.eraseInDisplay(params));\n    this._parser.setCsiHandler('K', (params, collect) => this.eraseInLine(params));\n    this._parser.setCsiHandler('L', (params, collect) => this.insertLines(params));\n    this._parser.setCsiHandler('M', (params, collect) => this.deleteLines(params));\n    this._parser.setCsiHandler('P', (params, collect) => this.deleteChars(params));\n    this._parser.setCsiHandler('S', (params, collect) => this.scrollUp(params));\n    this._parser.setCsiHandler('T', (params, collect) => this.scrollDown(params, collect));\n    this._parser.setCsiHandler('X', (params, collect) => this.eraseChars(params));\n    this._parser.setCsiHandler('Z', (params, collect) => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler('`', (params, collect) => this.charPosAbsolute(params));\n    this._parser.setCsiHandler('a', (params, collect) => this.hPositionRelative(params));\n    this._parser.setCsiHandler('b', (params, collect) => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler('c', (params, collect) => this.sendDeviceAttributes(params, collect));\n    this._parser.setCsiHandler('d', (params, collect) => this.linePosAbsolute(params));\n    this._parser.setCsiHandler('e', (params, collect) => this.vPositionRelative(params));\n    this._parser.setCsiHandler('f', (params, collect) => this.hVPosition(params));\n    this._parser.setCsiHandler('g', (params, collect) => this.tabClear(params));\n    this._parser.setCsiHandler('h', (params, collect) => this.setMode(params, collect));\n    this._parser.setCsiHandler('l', (params, collect) => this.resetMode(params, collect));\n    this._parser.setCsiHandler('m', (params, collect) => this.charAttributes(params));\n    this._parser.setCsiHandler('n', (params, collect) => this.deviceStatus(params, collect));\n    this._parser.setCsiHandler('p', (params, collect) => this.softReset(params, collect));\n    this._parser.setCsiHandler('q', (params, collect) => this.setCursorStyle(params, collect));\n    this._parser.setCsiHandler('r', (params, collect) => this.setScrollRegion(params, collect));\n    this._parser.setCsiHandler('s', (params, collect) => this.saveCursor(params));\n    this._parser.setCsiHandler('u', (params, collect) => this.restoreCursor(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    // some C1 control codes - FIXME: should those be enabled by default?\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, (data) => this.setTitle(data));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, (data) => this.setTitle(data));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler('7', () => this.saveCursor([]));\n    this._parser.setEscHandler('8', () => this.restoreCursor([]));\n    this._parser.setEscHandler('D', () => this.index());\n    this._parser.setEscHandler('E', () => this.nextLine());\n    this._parser.setEscHandler('H', () => this.tabSet());\n    this._parser.setEscHandler('M', () => this.reverseIndex());\n    this._parser.setEscHandler('=', () => this.keypadApplicationMode());\n    this._parser.setEscHandler('>', () => this.keypadNumericMode());\n    this._parser.setEscHandler('c', () => this.reset());\n    this._parser.setEscHandler('n', () => this.setgLevel(2));\n    this._parser.setEscHandler('o', () => this.setgLevel(3));\n    this._parser.setEscHandler('|', () => this.setgLevel(3));\n    this._parser.setEscHandler('}', () => this.setgLevel(2));\n    this._parser.setEscHandler('~', () => this.setgLevel(1));\n    this._parser.setEscHandler('%@', () => this.selectDefaultCharset());\n    this._parser.setEscHandler('%G', () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler('(' + flag, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler(')' + flag, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler('*' + flag, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler('+' + flag, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler('-' + flag, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler('.' + flag, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler('/' + flag, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._terminal.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler('$q', new DECRQSS(this._terminal));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal = null;\n  }\n\n  public parse(data: string): void {\n    // Ensure the terminal is not disposed\n    if (!this._terminal) {\n      return;\n    }\n\n    let buffer = this._terminal.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    // TODO: Consolidate debug/logging #1560\n    if ((<any>this._terminal).debug) {\n      this._terminal.log('data: ' + data);\n    }\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._stringDecoder.decode(data, this._parseBuffer));\n\n    buffer = this._terminal.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public parseUtf8(data: Uint8Array): void {\n    // Ensure the terminal is not disposed\n    if (!this._terminal) {\n      return;\n    }\n\n    let buffer = this._terminal.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    // TODO: Consolidate debug/logging #1560\n    if ((<any>this._terminal).debug) {\n      this._terminal.log('data: ' + data);\n    }\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._utf8Decoder.decode(data, this._parseBuffer));\n\n    buffer = this._terminal.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._terminal.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._terminal.options.screenReaderMode;\n    const cols = this._terminal.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._terminal.updateRange(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y > buffer.scrollBottom) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n          // FIXME: Do we have to set buffer.x to cols - 1, if not wrapping?\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._terminal.updateRange(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(flag: string, callback: (params: number[], collect: string) => boolean): IDisposable {\n    return this._parser.addCsiHandler(flag, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, callback);\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    if (this._terminal.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y > buffer.scrollBottom) {\n      buffer.y--;\n      this._terminal.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._terminal.cols) {\n      buffer.x--;\n    }\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._terminal.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    if (this._terminal.buffer.x > 0) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    const originalX = this._terminal.buffer.x;\n    this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    if (this._terminal.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._terminal.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).insertCells(\n      this._terminal.buffer.x,\n      params[0] || 1,\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n    this._terminal.buffer.x -= param;\n    if (this._terminal.buffer.x < 0) {\n      this._terminal.buffer.x = 0;\n    }\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * same as CSI Ps B ?\n   */\n  public cursorNextLine(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps F\n   * Cursor Preceding Line Ps Times (default = 1) (CNL).\n   * reuse CSI Ps A ?\n   */\n  public cursorPrecedingLine(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x = param - 1;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: number[]): void {\n    let col: number;\n    let row: number = params[0] - 1;\n\n    if (params.length >= 2) {\n      col = params[1] - 1;\n    } else {\n      col = 0;\n    }\n\n    if (row < 0) {\n      row = 0;\n    } else if (row >= this._terminal.rows) {\n      row = this._terminal.rows - 1;\n    }\n\n    if (col < 0) {\n      col = 0;\n    } else if (col >= this._terminal.cols) {\n      col = this._terminal.cols - 1;\n    }\n\n    this._terminal.buffer.x = col;\n    this._terminal.buffer.y = row;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: number[]): void {\n    let param = params[0] || 1;\n    while (param--) {\n      this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    }\n  }\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._terminal.buffer.lines.get(this._terminal.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    this._eraseInBufferLine(y, 0, this._terminal.cols, true);\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: number[]): void {\n    let j;\n    switch (params[0]) {\n      case 0:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        this._eraseInBufferLine(j++, this._terminal.buffer.x, this._terminal.cols, this._terminal.buffer.x === 0);\n        for (; j < this._terminal.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(j);\n        break;\n      case 1:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._terminal.buffer.x + 1, true);\n        if (this._terminal.buffer.x + 1 >= this._terminal.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._terminal.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 2:\n        j = this._terminal.rows;\n        this._terminal.updateRange(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._terminal.buffer.lines.length - this._terminal.rows;\n        if (scrollBackSize > 0) {\n          this._terminal.buffer.lines.trimStart(scrollBackSize);\n          this._terminal.buffer.ybase = Math.max(this._terminal.buffer.ybase - scrollBackSize, 0);\n          this._terminal.buffer.ydisp = Math.max(this._terminal.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: number[]): void {\n    switch (params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._terminal.buffer.y, this._terminal.buffer.x, this._terminal.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.cols);\n        break;\n    }\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: number[]): void {\n    let param: number = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._terminal.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._terminal.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._terminal.rows - 1 - buffer.scrollBottom;\n    j = this._terminal.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).deleteCells(\n      this._terminal.buffer.x,\n      params[0] || 1,\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: number[]): void {\n    let param = params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // this.maxRange();\n    this._terminal.updateRange(buffer.scrollTop);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: number[], collect?: string): void {\n    if (params.length < 2 && !collect) {\n      let param = params[0] || 1;\n\n      // make buffer local for faster access\n      const buffer = this._terminal.buffer;\n\n      while (param--) {\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n        buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n      }\n      // this.maxRange();\n      this._terminal.updateRange(buffer.scrollTop);\n      this._terminal.updateRange(buffer.scrollBottom);\n    }\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: number[]): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).replaceCells(\n      this._terminal.buffer.x,\n      this._terminal.buffer.x + (params[0] || 1),\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: number[]): void {\n    let param = params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   */\n  public charPosAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x = param - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * reuse CSI Ps C ?\n   */\n  public hPositionRelative(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: number[]): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributes(params: number[], collect?: string): void {\n    if (params[0] > 0) {\n      return;\n    }\n\n    if (!collect) {\n      if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n        this._terminal.handler(C0.ESC + '[?1;2c');\n      } else if (this._terminal.is('linux')) {\n        this._terminal.handler(C0.ESC + '[?6c');\n      }\n    } else if (collect === '>') {\n      // xterm and urxvt\n      // seem to spit this\n      // out around ~370 times (?).\n      if (this._terminal.is('xterm')) {\n        this._terminal.handler(C0.ESC + '[>0;276;0c');\n      } else if (this._terminal.is('rxvt-unicode')) {\n        this._terminal.handler(C0.ESC + '[>85;95;0c');\n      } else if (this._terminal.is('linux')) {\n        // not supported by linux console.\n        // linux console echoes parameters.\n        this._terminal.handler(params[0] + 'c');\n      } else if (this._terminal.is('screen')) {\n        this._terminal.handler(C0.ESC + '[>83;40003;0c');\n      }\n    }\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y = param - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: number[]): void {\n    let param = params[0];\n    if (param < 1) {\n      param = 1;\n    }\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   */\n  public hVPosition(params: number[]): void {\n    if (params[0] < 1) params[0] = 1;\n    if (params[1] < 1) params[1] = 1;\n\n    this._terminal.buffer.y = params[0] - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n\n    this._terminal.buffer.x = params[1] - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: number[]): void {\n    const param = params[0];\n    if (param <= 0) {\n      delete this._terminal.buffer.tabs[this._terminal.buffer.x];\n    } else if (param === 3) {\n      this._terminal.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: number[], collect?: string): void {\n    if (params.length > 1) {\n      for (let i = 0; i < params.length; i++) {\n        this.setMode([params[i]]);\n      }\n\n      return;\n    }\n\n    if (!collect) {\n      switch (params[0]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (params[0]) {\n        case 1:\n          this._terminal.applicationCursor = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          this._terminal.savedCols = this._terminal.cols;\n          this._terminal.resize(132, this._terminal.rows);\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._terminal.log('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n        case 1000: // vt200 mouse\n          // no motion.\n          // no modifiers, except control on the wheel.\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n\n          // TODO: Why are params[0] compares nested within a switch for params[0]?\n\n          this._terminal.x10Mouse = params[0] === 9;\n          this._terminal.vt200Mouse = params[0] === 1000;\n          this._terminal.normalMouse = params[0] > 1000;\n          this._terminal.mouseEvents = true;\n          if (this._terminal.element) {\n            this._terminal.element.classList.add('enable-mouse-events');\n          }\n          if (this._terminal.selectionManager) {\n            this._terminal.selectionManager.disable();\n          }\n          this._terminal.log('Binding to mouse events.');\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = true;\n          // for wide terminals\n          // simply encodes large values as utf8 characters\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = true;\n          // for wide terminals\n          // does not add 32 to fields\n          // press: ^[[<b;x;yM\n          // release: ^[[<b;x;ym\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = true;\n          // for wide terminals\n          // numbers for fields\n          // press: ^[[b;x;yM\n          // motion: ^[[b;x;yT\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor(params);\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor(params);\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._terminal.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: number[], collect?: string): void {\n    if (params.length > 1) {\n      for (let i = 0; i < params.length; i++) {\n        this.resetMode([params[i]]);\n      }\n\n      return;\n    }\n\n    if (!collect) {\n      switch (params[0]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (params[0]) {\n        case 1:\n          this._terminal.applicationCursor = false;\n          break;\n        case 3:\n          if (this._terminal.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._terminal.rows);\n          }\n          delete this._terminal.savedCols;\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._terminal.log('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._terminal.x10Mouse = false;\n          this._terminal.vt200Mouse = false;\n          this._terminal.normalMouse = false;\n          this._terminal.mouseEvents = false;\n          if (this._terminal.element) {\n            this._terminal.element.classList.remove('enable-mouse-events');\n          }\n          if (this._terminal.selectionManager) {\n            this._terminal.selectionManager.enable();\n          }\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = false;\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = false;\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = false;\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor(params);\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._terminal.buffers.activateNormalBuffer();\n          if (params[0] === 1049) {\n            this.restoreCursor(params);\n          }\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: number[]): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38) {\n        // fg color 256 and RGB\n        if (params[i + 1] === 2) {\n          i += 2;\n          attr.fg |= Attributes.CM_RGB;\n          attr.fg &= ~Attributes.RGB_MASK;\n          attr.fg |= AttributeData.fromColorRGB([params[i], params[i + 1], params[i + 2]]);\n          i += 2;\n        } else if (params[i + 1] === 5) {\n          i += 2;\n          p = params[i] & 0xff;\n          attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n          attr.fg |= Attributes.CM_P256 | p;\n        }\n      } else if (p === 48) {\n        // bg color 256 and RGB\n        if (params[i + 1] === 2) {\n          i += 2;\n          attr.bg |= Attributes.CM_RGB;\n          attr.bg &= ~Attributes.RGB_MASK;\n          attr.bg |= AttributeData.fromColorRGB([params[i], params[i + 1], params[i + 2]]);\n          i += 2;\n        } else if (params[i + 1] === 5) {\n          i += 2;\n          p = params[i] & 0xff;\n          attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n          attr.bg |= Attributes.CM_P256 | p;\n        }\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._terminal.error('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: number[], collect?: string): void {\n    if (!collect) {\n      switch (params[0]) {\n        case 5:\n          // status report\n          this._onData.fire(`${C0.ESC}[0n`);\n          break;\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._onData.fire(`${C0.ESC}[${y};${x}R`);\n          break;\n      }\n    } else if (collect === '?') {\n      // modern xterm doesnt seem to\n      // respond to any of these except ?6, 6, and 5\n      switch (params[0]) {\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._onData.fire(`${C0.ESC}[?${y};${x}R`);\n          break;\n        case 15:\n          // no printer\n          // this.handler(C0.ESC + '[?11n');\n          break;\n        case 25:\n          // dont support user defined keys\n          // this.handler(C0.ESC + '[?21n');\n          break;\n        case 26:\n          // north american keyboard\n          // this.handler(C0.ESC + '[?27;1;0;0n');\n          break;\n        case 53:\n          // no dec locator/mouse\n          // this.handler(C0.ESC + '[?50n');\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: number[], collect?: string): void {\n    if (collect === '!') {\n      this._terminal.cursorHidden = false;\n      this._terminal.insertMode = false;\n      this._terminal.originMode = false;\n      this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n      this._terminal.applicationKeypad = false; // ?\n      if (this._terminal.viewport) {\n        this._terminal.viewport.syncScrollArea();\n      }\n      this._terminal.applicationCursor = false;\n      this._terminal.buffer.scrollTop = 0;\n      this._terminal.buffer.scrollBottom = this._terminal.rows - 1;\n      this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n      this._terminal.buffer.x = this._terminal.buffer.y = 0; // ?\n      this._terminal.charset = null;\n      this._terminal.glevel = 0; // ??\n      this._terminal.charsets = [null]; // ??\n    }\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params?: number[], collect?: string): void {\n    if (collect === ' ') {\n      const param = params[0] < 1 ? 1 : params[0];\n      switch (param) {\n        case 1:\n        case 2:\n          this._terminal.options.cursorStyle = 'block';\n          break;\n        case 3:\n        case 4:\n          this._terminal.options.cursorStyle = 'underline';\n          break;\n        case 5:\n        case 6:\n          this._terminal.options.cursorStyle = 'bar';\n          break;\n      }\n      const isBlinking = param % 2 === 1;\n      this._terminal.options.cursorBlink = isBlinking;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   * CSI ? Pm r\n   */\n  public setScrollRegion(params: number[], collect?: string): void {\n    if (collect) {\n      return;\n    }\n    this._terminal.buffer.scrollTop = (params[0] || 1) - 1;\n    this._terminal.buffer.scrollBottom = (params[1] && params[1] <= this._terminal.rows ? params[1] : this._terminal.rows) - 1;\n    this._terminal.buffer.x = 0;\n    this._terminal.buffer.y = 0;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params: number[]): void {\n    this._terminal.buffer.savedX = this._terminal.buffer.x;\n    this._terminal.buffer.savedY = this._terminal.buffer.y;\n    this._terminal.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._terminal.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params: number[]): void {\n    this._terminal.buffer.x = this._terminal.buffer.savedX || 0;\n    this._terminal.buffer.y = this._terminal.buffer.savedY || 0;\n    this._terminal.curAttrData.fg = this._terminal.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._terminal.buffer.savedCurAttrData.bg;\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._terminal.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._terminal.log('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._terminal.log('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._terminal.index();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._terminal.tabSet();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._terminal.reverseIndex();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ParserState, ParserAction, IParsingState, IDcsHandler, IEscapeSequenceParser } from 'common/parser/Types';\nimport { Disposable } from 'common/Lifecycle';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\n\ninterface IHandlerCollection<T> {\n  [key: string]: T[];\n}\n\ntype CsiHandler = (params: number[], collect: string) => boolean | void;\ntype OscHandler = (data: string) => boolean | void;\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3a), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.add(0x3b, ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3a), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.add(0x3b, ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3a, 0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x3a, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.add(0x3a, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x30, 0x3a), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.add(0x3b, ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3a), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.add(0x3b, ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3a, 0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n/**\n * Dummy DCS handler as default fallback.\n */\nclass DcsDummy implements IDcsHandler {\n  hook(collect: string, params: number[], flag: number): void { }\n  put(data: Uint32Array, start: number, end: number): void { }\n  unhook(): void { }\n}\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` contructor argument and\n * reimplement the `parse` method.\n * NOTE: The parameter element notation is currently not supported.\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _osc: string;\n  protected _params: number[];\n  protected _collect: string;\n\n  // handler lookup containers\n  protected _printHandler: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlers: any;\n  protected _csiHandlers: IHandlerCollection<CsiHandler>;\n  protected _escHandlers: any;\n  protected _oscHandlers: IHandlerCollection<OscHandler>;\n  protected _dcsHandlers: any;\n  protected _activeDcsHandler: IDcsHandler | null;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlerFb: (code: number) => void;\n  protected _csiHandlerFb: (collect: string, params: number[], flag: number) => void;\n  protected _escHandlerFb: (collect: string, flag: number) => void;\n  protected _oscHandlerFb: (identifier: number, data: string) => void;\n  protected _dcsHandlerFb: IDcsHandler;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = [0];\n    this._collect = '';\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (collect: string, params: number[], flag: number): void => { };\n    this._escHandlerFb = (collect: string, flag: number): void => { };\n    this._oscHandlerFb = (identifier: number, data: string): void => { };\n    this._dcsHandlerFb = new DcsDummy();\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscHandlers = Object.create(null);\n    this._dcsHandlers = Object.create(null);\n    this._activeDcsHandler = null;\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler('\\\\', () => {});\n  }\n\n  public dispose(): void {\n    this._executeHandlers = null;\n    this._escHandlers = null;\n    this._dcsHandlers = null;\n    this._activeDcsHandler = null;\n  }\n\n  setPrintHandler(callback: (data: Uint32Array, start: number, end: number) => void): void {\n    this._printHandler = callback;\n  }\n  clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  setExecuteHandler(flag: string, callback: () => void): void {\n    this._executeHandlers[flag.charCodeAt(0)] = callback;\n  }\n  clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  setExecuteHandlerFallback(callback: (code: number) => void): void {\n    this._executeHandlerFb = callback;\n  }\n\n  addCsiHandler(flag: string, callback: CsiHandler): IDisposable {\n    const index = flag.charCodeAt(0);\n    if (this._csiHandlers[index] === undefined) {\n      this._csiHandlers[index] = [];\n    }\n    const handlerList = this._csiHandlers[index];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setCsiHandler(flag: string, callback: (params: number[], collect: string) => void): void {\n    this._csiHandlers[flag.charCodeAt(0)] = [callback];\n  }\n  clearCsiHandler(flag: string): void {\n    if (this._csiHandlers[flag.charCodeAt(0)]) delete this._csiHandlers[flag.charCodeAt(0)];\n  }\n  setCsiHandlerFallback(callback: (collect: string, params: number[], flag: number) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  setEscHandler(collectAndFlag: string, callback: () => void): void {\n    this._escHandlers[collectAndFlag] = callback;\n  }\n  clearEscHandler(collectAndFlag: string): void {\n    if (this._escHandlers[collectAndFlag]) delete this._escHandlers[collectAndFlag];\n  }\n  setEscHandlerFallback(callback: (collect: string, flag: number) => void): void {\n    this._escHandlerFb = callback;\n  }\n\n  addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    if (this._oscHandlers[ident] === undefined) {\n      this._oscHandlers[ident] = [];\n    }\n    const handlerList = this._oscHandlers[ident];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setOscHandler(ident: number, callback: (data: string) => void): void {\n    this._oscHandlers[ident] = [callback];\n  }\n  clearOscHandler(ident: number): void {\n    if (this._oscHandlers[ident]) delete this._oscHandlers[ident];\n  }\n  setOscHandlerFallback(callback: (identifier: number, data: string) => void): void {\n    this._oscHandlerFb = callback;\n  }\n\n  setDcsHandler(collectAndFlag: string, handler: IDcsHandler): void {\n    this._dcsHandlers[collectAndFlag] = handler;\n  }\n  clearDcsHandler(collectAndFlag: string): void {\n    if (this._dcsHandlers[collectAndFlag]) delete this._dcsHandlers[collectAndFlag];\n  }\n  setDcsHandlerFallback(handler: IDcsHandler): void {\n    this._dcsHandlerFb = handler;\n  }\n\n  setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  reset(): void {\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = [0];\n    this._collect = '';\n    this._activeDcsHandler = null;\n    this.precedingCodepoint = 0;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well. Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    let osc = this._osc;\n    let collect = this._collect;\n    let params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n    let dcsHandler: IDcsHandler | null = this._activeDcsHandler;\n    let callback: Function | null = null;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          this.precedingCodepoint = 0;\n          callback = this._executeHandlers[code];\n          if (callback) callback();\n          else this._executeHandlerFb(code);\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              osc,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // dont reset preceding codepoint for REP itself\n          if (code !== 98) { // 'b'\n            this.precedingCodepoint = 0;\n          }\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params, collect) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect, params, code);\n          }\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b)\n          do {\n            if (code === 0x3b) params.push(0);\n            else params[params.length - 1] = params[params.length - 1] * 10 + code - 48;\n          } while (++i < length && (code = data[i]) > 0x2f && (code < 0x3a || code === 0x3b));\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect += String.fromCharCode(code);\n          break;\n        case ParserAction.ESC_DISPATCH:\n          this.precedingCodepoint = 0;\n          callback = this._escHandlers[collect + String.fromCharCode(code)];\n          if (callback) callback(collect, code);\n          else this._escHandlerFb(collect, code);\n          break;\n        case ParserAction.CLEAR:\n          osc = '';\n          params = [0];\n          collect = '';\n          break;\n        case ParserAction.DCS_HOOK:\n          this.precedingCodepoint = 0;\n          dcsHandler = this._dcsHandlers[collect + String.fromCharCode(code)];\n          if (!dcsHandler) dcsHandler = this._dcsHandlerFb;\n          dcsHandler.hook(collect, params, code);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              if (dcsHandler) {\n                dcsHandler.put(data, i, j);\n              }\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          if (dcsHandler) {\n            dcsHandler.unhook();\n            dcsHandler = null;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params = [0];\n          collect = '';\n          break;\n        case ParserAction.OSC_START:\n          osc = '';\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc += utf32ToString(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          this.precedingCodepoint = 0;\n          if (osc && code !== 0x18 && code !== 0x1a) {\n            // NOTE: OSC subparsing is not part of the original parser\n            // we do basic identifier parsing here to offer a jump table for OSC as well\n            const idx = osc.indexOf(';');\n            if (idx === -1) {\n              this._oscHandlerFb(-1, osc);  // this is an error (malformed OSC)\n            } else {\n              // Note: NaN is not handled here\n              // either catch it with the fallback handler\n              // or with an explicit NaN OSC handler\n              const identifier = parseInt(osc.substring(0, idx));\n              const content = osc.substring(idx + 1);\n              // Trigger OSC Handler\n              const handlers = this._oscHandlers[identifier];\n              let j = handlers ? handlers.length - 1 : -1;\n              for (; j >= 0; j--) {\n                // undefined or true means success and to stop bubbling\n                if (handlers[j](content) !== false) {\n                  break;\n                }\n              }\n              if (j < 0) {\n                this._oscHandlerFb(identifier, content);\n              }\n            }\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params = [0];\n          collect = '';\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save non pushable buffers\n    this._osc = osc;\n    this._collect = collect;\n    this._params = params;\n\n    // save active dcs handler reference\n    this._activeDcsHandler = dcsHandler;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from './TextRenderLayer';\nimport { SelectionRenderLayer } from './SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { IRenderLayer, ICharacterJoinerRegistry } from './Types';\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { LinkRenderLayer } from './LinkRenderLayer';\nimport { CharacterJoinerRegistry } from '../renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService\n  ) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(_terminal);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this._colors),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this._colors, this._terminal),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this._colors)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this._terminal, this.dimensions));\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur(this._terminal));\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus(this._terminal));\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(this._terminal, start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove(this._terminal));\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged(this._terminal));\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset(this._terminal));\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(this._terminal, start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry } from './Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from './GridCache';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { CellData, AttributeData, Content, NULL_CELL_CODE } from 'common/buffer/BufferLine';\nimport { JoinedCellData } from './CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number;\n  private _characterFont: string;\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, characterJoinerRegistry: ICharacterJoinerRegistry, alpha: boolean) {\n    super(container, 'text', zIndex, alpha, colors);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(terminal, false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(terminal.cols, terminal.rows);\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._state.clear();\n    this.clearAll();\n  }\n\n  private _forEachCell(\n    terminal: ITerminal,\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < terminal.cols; x++) {\n        line.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift();\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line.length - 1 && line.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = terminal.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(terminal, firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      } if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle;\n        this.fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle;\n        this.fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this.fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    this._forEachCell(terminal, firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this.drawChars(terminal, cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (terminal.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this.fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this.clearCells(0, firstRow, terminal.cols, lastRow - firstRow + 1);\n    this._drawBackground(terminal, firstRow, lastRow);\n    this._drawForeground(terminal, firstRow, lastRow);\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    this.setTransparency(terminal, terminal.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: T[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(null);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = null;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, IGlyphIdentifier, INVERTED_DEFAULT_COLOR, ICharAtlasConfig } from './Types';\nimport { BaseCharAtlas } from './BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from './LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = this._cacheCanvas.getContext('2d', {alpha: true});\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency});\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek().index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from './Types';\nimport { IDisposable } from 'xterm';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T>;\n  next: ILinkedListNode<T>;\n  key: number;\n  value: T;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> = null;\n  private _tail: ILinkedListNode<T> = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head;\n      this._unlinkNode(node);\n      delete this._map[node.key];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop();\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\n\ninterface ISelectionState {\n  start: [number, number];\n  end: [number, number];\n  columnSelectMode: boolean;\n  ydisp: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state: ISelectionState;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'selection', zIndex, true, colors);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: null,\n      end: null,\n      columnSelectMode: null,\n      ydisp: null\n    };\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(terminal: ITerminal): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this.clearAll();\n    }\n  }\n\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, terminal.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this.clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this.fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : terminal.cols;\n      this.fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this.fillCells(0, viewportCappedStartRow + 1, terminal.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : terminal.cols;\n        this.fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = terminal.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number], coord2: [number, number]): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ITerminal } from '../Types';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/BufferLine';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: ITerminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n  private _cell: ICellData = new CellData();\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged(terminal);\n    }\n  }\n\n  public onBlur(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n  }\n\n  public onFocus(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume(terminal);\n    } else {\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n      // Request a refresh from the terminal as management of rendering is being\n      // moved back to the terminal\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onCursorMove(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: ITerminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!terminal.cursorState || terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.ybase + terminal.buffer.y;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    terminal.buffer.lines.get(cursorY).loadCell(terminal.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      this._renderBlurCursor(terminal, terminal.buffer.x, viewportRelativeCursorY, this._cell);\n      this._ctx.restore();\n      this._state.x = terminal.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = terminal.options.cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === terminal.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === terminal.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, terminal.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = terminal.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this.clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this.fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this.fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this.strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    terminal: ITerminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (terminal.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: ITerminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(terminal: ITerminal): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ITerminal, ILinkifierAccessor } from '../Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from './atlas/Types';\nimport { is256Color } from './atlas/CharAtlasUtils';\nimport { IColorSet } from 'browser/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent = null;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ILinkifierAccessor) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = null;\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this.clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this.clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this.clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = null;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this.fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this.fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this.fillBottomLineAtCells(0, y, e.cols);\n      }\n      this.fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, ITerminal, IMouseZoneManager } from './Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { MouseZone } from './MouseZoneManager';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static readonly TIME_BEFORE_LINKIFY = 200;\n\n  /**\n   * Limit of the unwrapping line expansion (overscan) at the top and bottom\n   * of the actual viewport in ASCII characters.\n   * A limit of 2000 should match most sane urls.\n   */\n  protected static readonly OVERSCAN_CHAR_LIMIT = 2000;\n\n  protected _linkMatchers: ILinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager;\n  private _rowsTimeoutId: number;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number, end: number };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected _terminal: ITerminal\n  ) {\n    this._rowsToLinkify = {\n      start: null,\n      end: null\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(mouseZoneManager: IMouseZoneManager): void {\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === null) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier.TIME_BEFORE_LINKIFY);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = null;\n    const buffer = this._terminal.buffer;\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._terminal.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(Linkifier.OVERSCAN_CHAR_LIMIT / this._terminal.cols);\n    const iterator = this._terminal.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = null;\n    this._rowsToLinkify.end = null;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: ILinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: ILinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, matcher.regex.flags + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        // DEBUG: print match and throw\n        if ((<any>this._terminal).debug) {\n          console.log({match, matcher});\n          throw new Error('match found without corresponding matchIndex');\n        }\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._terminal.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._terminal.buffer.lines.get(bufferIndex[0]);\n      const attr = line.getFg(bufferIndex[1]);\n      let fg: number | undefined;\n      if (attr) {\n        fg = (attr >> 9) & 0x1ff;\n      }\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number): void {\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._terminal.cols;\n    const y1 = y + Math.floor(x / this._terminal.cols);\n    let x2 = (x1 + width) % this._terminal.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._terminal.cols);\n    if (x2 === 0) {\n      x2 = this._terminal.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          matcher.hoverTooltipCallback(e, uri);\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._terminal.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISelectionManager, ISelectionRedrawRequestEvent } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine } from 'common/Types';\nimport { MouseHelper } from 'browser/input/MouseHelper';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from './SelectionModel';\nimport { AltClickHandler } from './handlers/AltClickHandler';\nimport { CellData } from 'common/buffer/BufferLine';\nimport { IDisposable } from 'xterm';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\n/**\n * A string containing all characters that are considered word separated by the\n * double click to select work logic.\n */\nconst WORD_SEPARATORS = ' ()[]{}\\'\"';\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionManager handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionManager but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionManager implements ISelectionManager {\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: NodeJS.Timer;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private _terminal: ITerminal,\n    private _charSizeService: ICharSizeService,\n    bufferService: IBufferService\n  ) {\n    this._initListeners();\n    this.enable();\n\n    this._model = new SelectionModel(_terminal, bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  private get _buffer(): IBuffer {\n    return this._terminal.buffers.active;\n  }\n\n  /**\n   * Initializes listener variables.\n   */\n  private _initListeners(): void {\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n\n    this.initBuffersListeners();\n  }\n\n  public initBuffersListeners(): void {\n    this._trimListener = this._terminal.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._terminal.buffers.onBufferActivate(e => this._onBufferActivate(e));\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = this._buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(this._buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = this._buffer.lines.get(i);\n        const lineText = this._buffer.translateBufferLineToString(i, true);\n        if (bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = this._buffer.lines.get(end[1]);\n        const lineText = this._buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isMSWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = null;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = null;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._terminal.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._terminal.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] {\n    const coords = this._terminal.mouseHelper.getCoords(event, this._terminal.screenElement, this._terminal.cols, this._terminal.rows, true);\n    if (!coords) {\n      return null;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._terminal.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = MouseHelper.getCoordsRelativeToElement(event, this._terminal.screenElement)[1];\n    const terminalHeight = this._terminal.rows * Math.ceil(this._charSizeService.height * this._terminal.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._terminal.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    this._terminal.element.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n    this._terminal.element.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    this._dragScrollIntervalTimer = setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._terminal.element.ownerDocument) {\n      this._terminal.element.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = null;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = null;\n\n    // Ensure the line exists\n    const line = this._buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length >= this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._terminal.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._terminal.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._terminal.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    if (this._model.selectionEnd[1] < this._buffer.lines.length) {\n      if (this._buffer.lines.get(this._model.selectionEnd[1]).hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (this._dragScrollAmount) {\n      this._terminal.scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._terminal.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(this._terminal.buffer.ydisp + this._terminal.rows, this._terminal.buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = this._terminal.buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      (new AltClickHandler(event, this._terminal)).move();\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    if (this._trimListener) {\n      this._trimListener.dispose();\n    }\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._terminal.cols) {\n      return null;\n    }\n\n    const bufferLine = this._buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return null;\n    }\n\n    const line = this._buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._terminal.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return null;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = this._buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._terminal.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._terminal.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._terminal.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._terminal.cols && bufferLine.getCodePoint(this._terminal.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = this._buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._terminal.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._terminal.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._terminal.cols) {\n          wordPosition.length -= this._terminal.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return WORD_SEPARATORS.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._terminal.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number];\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number];\n\n  constructor(\n    private _terminal: ITerminal,\n    private _bufferService: IBufferService\n  ) {\n    this.clearSelection();\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = null;\n    this.selectionEnd = null;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._terminal.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return null;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IBufferLine, ICircularList } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\nexport class AltClickHandler {\n  private _startRow: number;\n  private _startCol: number;\n  private _endRow: number;\n  private _endCol: number;\n  private _lines: ICircularList<IBufferLine>;\n\n  constructor(\n    private _mouseEvent: MouseEvent,\n    private _terminal: ITerminal\n  ) {\n    this._lines = this._terminal.buffer.lines;\n    this._startCol = this._terminal.buffer.x;\n    this._startRow = this._terminal.buffer.y;\n\n    const coordinates = this._terminal.mouseHelper.getCoords(\n      this._mouseEvent,\n      this._terminal.element,\n      this._terminal.cols,\n      this._terminal.rows,\n      false\n    );\n\n    if (coordinates) {\n      [this._endCol, this._endRow] = coordinates.map((coordinate: number) => {\n        return coordinate - 1;\n      });\n    }\n  }\n\n  /**\n   * Writes the escape sequences of arrows to the terminal\n   */\n  public move(): void {\n    if (this._mouseEvent.altKey && this._endCol !== undefined && this._endRow !== undefined) {\n      this._terminal.handler(this._arrowSequences());\n    }\n  }\n\n  /**\n   * Concatenates all the arrow sequences together.\n   * Resets the starting row to an unwrapped row, moves to the requested row,\n   * then moves to requested col.\n   */\n  private _arrowSequences(): string {\n    // The alt buffer should try to navigate between rows\n    if (!this._terminal.buffer.hasScrollback) {\n      return this._resetStartingRow() + this._moveToRequestedRow() + this._moveToRequestedCol();\n    }\n\n    // Only move horizontally for the normal buffer\n    return this._moveHorizontallyOnly();\n  }\n\n  /**\n   * If the initial position of the cursor is on a row that is wrapped, move the\n   * cursor up to the first row that is not wrapped to have accurate vertical\n   * positioning.\n   */\n  private _resetStartingRow(): string {\n    if (this._moveToRequestedRow().length === 0) {\n      return '';\n    }\n    return repeat(this._bufferLine(\n      this._startCol, this._startRow, this._startCol,\n      this._startRow - this._wrappedRowsForRow(this._startRow), false\n    ).length, this._sequence(Direction.LEFT));\n  }\n\n  /**\n   * Using the reset starting and ending row, move to the requested row,\n   * ignoring wrapped rows\n   */\n  private _moveToRequestedRow(): string {\n    const startRow = this._startRow - this._wrappedRowsForRow(this._startRow);\n    const endRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n\n    const rowsToMove = Math.abs(startRow - endRow) - this._wrappedRowsCount();\n\n    return repeat(rowsToMove, this._sequence(this._verticalDirection()));\n  }\n\n  /**\n   * Move to the requested col on the ending row\n   */\n  private _moveToRequestedCol(): string {\n    let startRow;\n    if (this._moveToRequestedRow().length > 0) {\n      startRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n    } else {\n      startRow = this._startRow;\n    }\n\n    const endRow = this._endRow;\n    const direction = this._horizontalDirection();\n\n    return repeat(this._bufferLine(\n      this._startCol, startRow, this._endCol, endRow,\n      direction === Direction.RIGHT\n    ).length, this._sequence(direction));\n  }\n\n  private _moveHorizontallyOnly(): string {\n    const direction = this._horizontalDirection();\n    return repeat(Math.abs(this._startCol - this._endCol), this._sequence(direction));\n  }\n\n  /**\n   * Utility functions\n   */\n\n  /**\n   * Calculates the number of wrapped rows between the unwrapped starting and\n   * ending rows. These rows need to ignored since the cursor skips over them.\n   */\n  private _wrappedRowsCount(): number {\n    let wrappedRows = 0;\n    const startRow = this._startRow - this._wrappedRowsForRow(this._startRow);\n    const endRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n\n    for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n      const direction = this._verticalDirection() === Direction.UP ? -1 : 1;\n\n      if (this._lines.get(startRow + (direction * i)).isWrapped) {\n        wrappedRows++;\n      }\n    }\n\n    return wrappedRows;\n  }\n\n  /**\n   * Calculates the number of wrapped rows that make up a given row.\n   * @param currentRow The row to determine how many wrapped rows make it up\n   */\n  private _wrappedRowsForRow(currentRow: number): number {\n    let rowCount = 0;\n    let lineWraps = this._lines.get(currentRow).isWrapped;\n\n    while (lineWraps && currentRow >= 0 && currentRow < this._terminal.rows) {\n      rowCount++;\n      currentRow--;\n      lineWraps = this._lines.get(currentRow).isWrapped;\n    }\n\n    return rowCount;\n  }\n\n  /**\n   * Direction determiners\n   */\n\n  /**\n   * Determines if the right or left arrow is needed\n   */\n  private _horizontalDirection(): Direction {\n    let startRow;\n    if (this._moveToRequestedRow().length > 0) {\n      startRow = this._endRow - this._wrappedRowsForRow(this._endRow);\n    } else {\n      startRow = this._startRow;\n    }\n\n    if ((this._startCol < this._endCol &&\n      startRow <= this._endRow) || // down/right or same y/right\n      (this._startCol >= this._endCol &&\n      startRow < this._endRow)) {  // down/left or same y/left\n      return Direction.RIGHT;\n    }\n    return Direction.LEFT;\n  }\n\n  /**\n   * Determines if the up or down arrow is needed\n   */\n  private _verticalDirection(): Direction {\n    if (this._startRow > this._endRow) {\n      return Direction.UP;\n    }\n    return Direction.DOWN;\n  }\n\n  /**\n   * Constructs the string of chars in the buffer from a starting row and col\n   * to an ending row and col\n   * @param startCol The starting column position\n   * @param startRow The starting row position\n   * @param endCol The ending column position\n   * @param endRow The ending row position\n   * @param forward Direction to move\n   */\n  private _bufferLine(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number,\n    forward: boolean\n  ): string {\n    let currentCol = startCol;\n    let currentRow = startRow;\n    let bufferStr = '';\n\n    while (currentCol !== endCol || currentRow !== endRow) {\n      currentCol += forward ? 1 : -1;\n\n      if (forward && currentCol > this._terminal.cols - 1) {\n        bufferStr += this._terminal.buffer.translateBufferLineToString(\n          currentRow, false, startCol, currentCol\n        );\n        currentCol = 0;\n        startCol = 0;\n        currentRow++;\n      } else if (!forward && currentCol < 0) {\n        bufferStr += this._terminal.buffer.translateBufferLineToString(\n          currentRow, false, 0, startCol + 1\n        );\n        currentCol = this._terminal.cols - 1;\n        startCol = currentCol;\n        currentRow--;\n      }\n    }\n\n    return bufferStr + this._terminal.buffer.translateBufferLineToString(\n      currentRow, false, startCol, currentCol\n    );\n  }\n\n  /**\n   * Constructs the escape sequence for clicking an arrow\n   * @param direction The direction to move\n   */\n  private _sequence(direction: Direction): string {\n    const mod = this._terminal.applicationCursor ? 'O' : '[';\n    return C0.ESC + mod + direction;\n  }\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, ISoundManager } from './Types';\n\nexport class SoundManager implements ISoundManager {\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundManager._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundManager._audioContext = new audioContextCtor();\n    }\n    return SoundManager._audioContext;\n  }\n\n  constructor(\n    private _terminal: ITerminal\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundManager.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._terminal.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private _terminal: ITerminal,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        element.textContent = lineData.length === 0 ? Strings.blankLine : lineData;\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n    this._refreshRowsDimensions();\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { ILinkifierEvent, ITerminal } from '../../Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from './DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from '../atlas/Types';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n// TODO: Pull into an addon when TS composite projects allow easier sharing of code (not just\n// interfaces) between core and addons\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(_terminal.options, document);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._terminal.options.fontFamily};` +\n        ` font-size: ${this._terminal.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink {` +\n        ` 0% { opacity: 1.0; }` +\n        ` 50% { opacity: 0.0; }` +\n        ` 100% { opacity: 1.0; }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS} {` +\n        ` animation: blink 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this._colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n    const cursorBlink = this._terminal.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, terminal.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalOptions } from '../../Types';\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from '../atlas/Types';\nimport { CellData, AttributeData, NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from 'common/buffer/BufferLine';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private _terminalOptions: ITerminalOptions,\n    private _document: Document\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      const swapColor = this._workCell.isInverse();\n\n      // fg\n      if (this._workCell.isFgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? 'background-' : ''}color:rgb(${(AttributeData.toColorRGB(this._workCell.getFgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isFgPalette()) {\n        let fg = this._workCell.getFgColor();\n        if (this._workCell.isBold() && fg < 8 && !swapColor && this._terminalOptions.drawBoldTextInBrightColors) {\n          fg += 8;\n        }\n        charElement.classList.add(`xterm-${swapColor ? 'b' : 'f'}g-${fg}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      // bg\n      if (this._workCell.isBgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? '' : 'background-'}color:rgb(${(AttributeData.toColorRGB(this._workCell.getBgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isBgPalette()) {\n        charElement.classList.add(`xterm-${swapColor ? 'f' : 'b'}g-${this._workCell.getBgColor()}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = isMac ? C0.ESC + 'b' : C0.ESC + '[1;5D';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = isMac ? C0.ESC + 'f' : C0.ESC + '[1;5C';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          result.key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          result.key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - Control Sequence Introducer (CSI)\n          result.key = String.fromCharCode(27);\n        } else if (ev.keyCode === 220) {\n          // ^\\ - String Terminator (ST)\n          result.key = String.fromCharCode(28);\n        } else if (ev.keyCode === 221) {\n          // ^] - Operating System Command (OSC)\n          result.key = String.fromCharCode(29);\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\nimport { ITerminal } from './Types';\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/BufferLine';\n\nexport function applyWindowsMode(terminal: ITerminal): IDisposable {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  return terminal.onLineFeed(() => {\n    const line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n    const lastChar = line.get(terminal.cols - 1);\n\n    if (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE) {\n      const nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n      nextLine.isWrapped = true;\n    }\n  });\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    optionsService: IOptionsService,\n    charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this._renderer.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this._renderer.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderCoordinator should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  scrollback: 1000,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  debug: false,\n  cancelEvents: false,\n  useFlowControl: false\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData } from 'common/Types';\nimport { BufferLine, CellData, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n              // There is room above the buffer and there are no empty elements below the line,\n              // scroll up\n              this.ybase--;\n              addToY++;\n              if (this.ydisp > 0) {\n                // Viewport is at the top of the buffer, must increase downwards\n                this.ydisp--;\n              }\n            } else {\n              // Add a blank line if there is no buffer left at the top to scroll to, or if there\n              // are blank lines after the cursor\n              this.lines.push(new BufferLine(newCols, nullCell));\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedY = Math.min(this.savedY, newRows - 1);\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}